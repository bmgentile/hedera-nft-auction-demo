/*
 * This file is generated by jOOQ.
 */
package com.hedera.demo.auction.app.db.tables;


import com.hedera.demo.auction.app.db.Public;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Scheduledoperationslog extends TableImpl<Record> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public.scheduledoperationslog</code>
     */
    public static final Scheduledoperationslog SCHEDULEDOPERATIONSLOG = new Scheduledoperationslog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>public.scheduledoperationslog.transactiontype</code>.
     */
    public final TableField<Record, String> TRANSACTIONTYPE = createField(DSL.name("transactiontype"), SQLDataType.CLOB.defaultValue(DSL.field("''::text", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>public.scheduledoperationslog.transactiontimestamp</code>.
     */
    public final TableField<Record, String> TRANSACTIONTIMESTAMP = createField(DSL.name("transactiontimestamp"), SQLDataType.CLOB.defaultValue(DSL.field("''::text", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>public.scheduledoperationslog.auctionid</code>.
     */
    public final TableField<Record, Integer> AUCTIONID = createField(DSL.name("auctionid"), SQLDataType.INTEGER.defaultValue(DSL.field("0", SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.scheduledoperationslog.transactionid</code>.
     */
    public final TableField<Record, String> TRANSACTIONID = createField(DSL.name("transactionid"), SQLDataType.CLOB.defaultValue(DSL.field("''::text", SQLDataType.CLOB)), this, "");

    /**
     * The column <code>public.scheduledoperationslog.result</code>.
     */
    public final TableField<Record, String> RESULT = createField(DSL.name("result"), SQLDataType.CLOB.defaultValue(DSL.field("''::text", SQLDataType.CLOB)), this, "");

    private Scheduledoperationslog(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Scheduledoperationslog(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>public.scheduledoperationslog</code> table reference
     */
    public Scheduledoperationslog(String alias) {
        this(DSL.name(alias), SCHEDULEDOPERATIONSLOG);
    }

    /**
     * Create an aliased <code>public.scheduledoperationslog</code> table reference
     */
    public Scheduledoperationslog(Name alias) {
        this(alias, SCHEDULEDOPERATIONSLOG);
    }

    /**
     * Create a <code>public.scheduledoperationslog</code> table reference
     */
    public Scheduledoperationslog() {
        this(DSL.name("scheduledoperationslog"), null);
    }

    public <O extends Record> Scheduledoperationslog(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SCHEDULEDOPERATIONSLOG);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public Scheduledoperationslog as(String alias) {
        return new Scheduledoperationslog(DSL.name(alias), this);
    }

    @Override
    public Scheduledoperationslog as(Name alias) {
        return new Scheduledoperationslog(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Scheduledoperationslog rename(String name) {
        return new Scheduledoperationslog(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Scheduledoperationslog rename(Name name) {
        return new Scheduledoperationslog(name, null);
    }
}
